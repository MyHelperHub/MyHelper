name: MyHelper Release

on:
  push:
    tags:
      - "v*" # 推送事件匹配 v*, 例如 v1.0，v20.15.10 等来触发工作流
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      # 安装 Node.js
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 发布 Release
      - name: Generate changelog
        id: create_release
        run: npx changelogithub --draft --name ${{ steps.vars.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

  build-app:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            target: "aarch64-apple-darwin"
          - platform: "macos-latest"
            target: "x86_64-apple-darwin"
          - platform: "windows-latest"
            target: "x86_64-pc-windows-msvc"
          - platform: "windows-latest"
            target: "i686-pc-windows-msvc"
          - platform: "windows-latest"
            target: "aarch64-pc-windows-msvc"
          - platform: "ubuntu-22.04"
            target: "x86_64-unknown-linux-gnu"

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 设置 Node.js 环境
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 设置 pnpm
      - uses: pnpm/action-setup@v3
        with:
          version: latest

      # 添加 Rust 目标
      - name: Add rust target
        run: rustup target add ${{ matrix.target }}

      # 安装 Ubuntu 依赖
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      # 安装 Rust
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      # 使用 Rust 缓存
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: ./src-tauri -> target

      # 安装依赖并构建前端
      - name: Install app dependencies and build web
        run: |
          pnpm install --frozen-lockfile
          pnpm run build

      # 执行构建并推送 GitHub release
      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: MyHelper ${{ github.ref_name }}
          releaseBody: ""
          releaseDraft: true
          prerelease: false
          args: --target ${{ matrix.target }} --mode production
