name: MyHelper Preview Build

on:
  workflow_dispatch:

jobs:
  build-preview:
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            target: "aarch64-apple-darwin"
          - platform: "macos-latest"
            target: "x86_64-apple-darwin"
          - platform: "windows-latest"
            target: "x86_64-pc-windows-msvc"
          - platform: "windows-latest"
            target: "i686-pc-windows-msvc"
          - platform: "windows-latest"
            target: "aarch64-pc-windows-msvc"
          - platform: "ubuntu-22.04"
            target: "x86_64-unknown-linux-gnu"

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 生成版本信息
      - name: Generate version info
        id: version
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
            BRANCH_NAME=$(echo ${{ github.ref_name }} | sed 's/\//-/g')
            echo "version=${BRANCH_NAME}-${SHORT_SHA}" >> $GITHUB_OUTPUT
            echo "artifact_name=MyHelper-${BRANCH_NAME}-${SHORT_SHA}-${{ matrix.target }}" >> $GITHUB_OUTPUT
          else
            SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
            BRANCH_NAME=$(echo ${{ github.ref_name }} | sed 's/\//-/g')
            echo "version=${BRANCH_NAME}-${SHORT_SHA}" >> $GITHUB_OUTPUT
            echo "artifact_name=MyHelper-${BRANCH_NAME}-${SHORT_SHA}-${{ matrix.target }}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      # 设置 Node.js 环境
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 设置 pnpm
      - uses: pnpm/action-setup@v3
        with:
          version: latest

      # 添加 Rust 目标
      - name: Add rust target
        run: rustup target add ${{ matrix.target }}

      # 安装 Ubuntu 依赖
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      # 安装 Rust
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      # 使用 Rust 缓存
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: ./src-tauri -> target

      # 获取 pnpm 缓存
      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      # 安装依赖并构建前端
      - name: Install app dependencies and build web
        run: |
          pnpm install --frozen-lockfile
          pnpm run build

      # 执行构建
      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          CI: false
        with:
          tagName: ${{ steps.version.outputs.version }}
          releaseName: MyHelper Preview ${{ steps.version.outputs.version }}
          releaseBody: |
            Preview build from commit ${{ github.sha }}
            Branch: ${{ github.ref_name }}

            ⚠️ This is a preview build for testing purposes only.
          releaseDraft: false
          prerelease: true
          includeUpdaterJson: false
          args: --target ${{ matrix.target }}

      # 上传构建产物为 artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.version.outputs.artifact_name }}
          path: |
            src-tauri/target/${{ matrix.target }}/release/bundle/**/*
          retention-days: 30